trigger: none

resources:
  pipelines:
    - pipeline: terrafor_ci
      project: 'Hello World'                
      source: SRE-Bootstrap-Plan 
      trigger:
        branches:
          include:
            - main

variables:
  tf_working_dir: 'bootstrap/tfstate'
  -group: Azure_SP_Connection_String
  TF_LOG: DEBUG
  TF_LOG_PATH: 'terraform-debug.log'

stages:
  - stage: Apply
    displayName: 'Terraform Apply Stage'
    jobs:
      - job: Apply
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'     

          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'specific'
              project: 'Hello World'                  
              pipeline: 'SRE-Bootstrap-Plan'        
              buildVersionToDownload: 'latest'
              artifact: 'tfplan'                   
              targetPath: '$(tf_working_dir)'

          - script: |
              cd $(tf_working_dir)
              terraform init -reconfigure \
                -backend-config="resource_group_name=Chennai-DC-BCP" \
                -backend-config="storage_account_name=bcpdbstorage" \
                -backend-config="container_name=bcpstatefile" \
                -backend-config="key=Bootstrap.terraform.tfstate"
            displayName: 'Terraform Init'

            env:
              ARM_CLIENT_ID: $(CLIENT)
              ARM_CLIENT_SECRET: $(SECRET)
              ARM_SUBSCRIPTION_ID: $(SUBS)
              ARM_TENANT_ID: $(TENANT)

          - script: |
              cd $(tf_working_dir)
              TF_LOG=$(TF_LOG) TF_LOG_PATH=$(TF_LOG_PATH) terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply(with logging)'

            env:
              ARM_CLIENT_ID: $(CLIENT)
              ARM_CLIENT_SECRET: $(SECRET)
              ARM_SUBSCRIPTION_ID: $(SUBS)
              ARM_TENANT_ID: $(TENANT)

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(tf_working_dir)/$(TF_LOG_PATH)'
              artifactName: 'tfapply-debug-log'
              publishLocation: 'pipeline'
